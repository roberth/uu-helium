-------------------------------------------------------------------------------
--
--   *** The Helium Compiler : Static Analysis ***
--               ( Bastiaan Heeren )
--
-- TypeInferencing.ag : The type inferencer for Helium
--
-------------------------------------------------------------------------------

ATTR Module
   [ importEnvironment     : ImportEnvironment
     strategy              : Strategy
     useTypeGraph          : Bool
   |
   | debugIO               : {IO ()}
     toplevelTypes         : {AssocList Name TpScheme} -- TypeEnvironment
     typeErrors            : TypeErrors
     warnings              : Warnings
   ]

INCLUDE "TypeInferenceRules.ag"
INCLUDE "TypeInferenceInfo.ag"
INCLUDE "../staticchecks/HeliumPartialSyntax.ag"
INCLUDE "../../syntax/UHA_Size.ag"
INCLUDE "../../syntax/UHA_OneLine.ag"
INCLUDE "../../syntax/UHA_Syntax.ag"
INCLUDE "../../syntax/UHA_Self.ag"

imports {

-- standard
import Monad                   ( when )
import List                    ( intersperse, partition, nub, zipWith4, union )
-- types
import Types
import TypeConversion
-- constraints
import Constraints
import LiftedConstraints
import ConstraintTree
import Strategy
-- messages
import Messages
-- solvers
import SolveConstraints 
import SolveEquivalenceGroups  ( solveEquivalenceGroups )
import SolveGreedy             ( solveGreedy )
import ConstraintInfo
import TypeGraphConstraintInfo
import EquivalenceGroupsImplementation ( )
import HeliumConstraintInfo
-- common
import ImportEnvironment
import SortedAssocList
-- other
import TopSort                 ( topSort )
import Utils                   ( internalError )
import DerivingShow            ( typeOfShowFunction, nameOfShowFunction ) 
import UHA_Utils               ( noRange, getNameRange, getExprRange )
import UHA_Syntax
import FiniteMap
}

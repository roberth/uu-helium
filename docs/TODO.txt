30 Januari 2004
===============

HELIUM
- --version vlag (aanroepen bij start van Hint)
- Unit tests voor type classes nalopen (*)
- Nieuwe tests in simple overbrengen naar type class unit tests (*)
- Libraries met en zonder overloading in overeenstemming brengen (*)
- Internationalisatie
- Hints meer vragend brengen: Question: did you mean to use ++ ? o.i.d.
- Bastiaan: type could be more general warning (heel moeilijk)
- $main = putStr (show main) (toplevelTypes wordt dan onnodig in code generator)
- module systeem (paper van Jones etc.)
  [ - bij het exporteren van een functie moeten ook de types geexporteerd worden. Hoe?
	we moeten ook weten waar iets oorspronkelijk vandaan komt (definitieplek)
    - import Module(N) moet ook de show importeren: import Module (N, showN) ]
- XML uitvoer van errors en warnings t.b.v. interpreter
- clashes with HeliumLang ==> clash with built-in (MANUAL)
	bijvoorbeeld showUnit of data Unit = ... proberen te definieren
- :t in geval van typeringsfout
- compilerondersteuning voor interpreter (expressie uitrekenen, type bepalen)
- Hudak & Thompson & Bird doorlopen
- deriving
- class, instance
- "possible fall through" anders presenteren, bijv. "it is good practice to have otherwise as the last guard"
- warning bij Let, Where (undefined constructor, hint: did you mean the keyword...?)

LIBRARIES
- show implementeren met shows, ShowS; efficienter
- read functies voor andere types dan Int

HINT
- Hint op Linux & Mac (springen naar regelnummers) (*)
- Hint in wxHaskell (Arie, Daan)
- functies definieren? 
- autoload feature (zie e-mails van Stephen Milborrow)?
- Er mogen niet twee punten in een filenaam zitten
- paden via command-line
- meer features zoals springen naar definitie van functie, documentatie etc...
- architectuur? communicatie via een pipe (strings, read/show). 
  eerst maar zoals het is.
- :l test.hs  slechte foutmelding over module naam die uppercase moet

TEXTHINT
- pijltjestoetsen onder Win95/98/Me en UNIX
- paden via command-line
- KIJKEN NAAR HMAKE Van Malcolm Wallace

LVM
- File I/O op Mac
- nieuwe core syntax
- nieuwe directory structuur: coreasm - runtime
- standaard libraries bij runtime (gedeeld met helium)
- IORef
- 1 callback voor wx
- WX integratie simpel: alleen soegraphics
- let f x = f (x+1) in f 0 (*)
- Coreasm en module systeem

DOCUMENTATIE
- List en Maybe
- tutorial
- fouten/warnings/hints uitleggen adhv voorbeeldje

Versie 1.3
- Haskell mailing lijst
- Dingen met sterretjes gedaan zijn

